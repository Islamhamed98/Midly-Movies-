@model Midly.ViewModels.MovieViewModel

@{
    ViewBag.Title = "Create";
}
@if (Model.Movie == null)
{
    <h2> Create </h2>
}
else
{
    <h2> Edit </h2> 
}

@using (Html.BeginForm("Save", "Movies", FormMethod.Post))
{
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.Name)
        @Html.TextBoxFor(m => m.Movie.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m=>m.Movie.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.ReleaseDate)
        @Html.TextBoxFor(m => m.Movie.ReleaseDate, "{0:d MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m=>m.Movie.ReleaseDate)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.NumInStock)
        @Html.TextBoxFor(m => m.Movie.NumInStock, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.NumInStock)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.GenreId)
        @Html.DropDownListFor(m => m.Movie.GenreId, new SelectList(Model.Genres, "Id", "Name"), "Select Genre Type", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.GenreId)
    </div>
    @Html.HiddenFor(m => m.Movie.Id)
    @Html.AntiForgeryToken()
    <div class="form-group">
        <button type="submit" class="btn btn-primary"> Save </button>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>  
@section scripts {

   @Scripts.Render("~/bundles/jqueryval")

}